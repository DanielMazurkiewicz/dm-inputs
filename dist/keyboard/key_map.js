import { KeyBackspace, KeyTab, KeyEnter, KeyShift, KeyCtrl, KeyAlt, KeyPauseBreak, KeyCapsLock, KeyEscape, KeySpace, KeyPageUp, KeyPageDown, KeyEnd, KeyHome, KeyArrowLeft, KeyArrowUp, KeyArrowRight, KeyArrowDown, KeyInsert, KeyDelete, Key0, Key1, Key2, Key3, Key4, Key5, Key6, Key7, Key8, Key9, KeyA, KeyB, KeyC, KeyD, KeyE, KeyF, KeyG, KeyH, KeyI, KeyJ, KeyK, KeyL, KeyM, KeyN, KeyO, KeyP, KeyQ, KeyR, KeyS, KeyT, KeyU, KeyV, KeyW, KeyX, KeyY, KeyZ, KeyMeta, KeyContextMenu, KeyNumpad0, KeyNumpad1, KeyNumpad2, KeyNumpad3, KeyNumpad4, KeyNumpad5, KeyNumpad6, KeyNumpad7, KeyNumpad8, KeyNumpad9, KeyNumpadMultiply, KeyNumpadAdd, KeyNumpadSubtract, KeyNumpadDecimal, KeyNumpadDivide, KeyF1, KeyF2, KeyF3, KeyF4, KeyF5, KeyF6, KeyF7, KeyF8, KeyF9, KeyF10, KeyF11, KeyF12, KeyNumLock, KeyScrollLock, KeySemicolon, KeyEqual, KeyComma, KeyDash, KeyPeriod, KeyForwardSlash, KeyGraveAccent, KeyOpenBracket, KeyBackslash, KeyCloseBracket, KeySingleQuote } from './keys';
/**
 * Maps `KeyboardEvent.code` values to the internal `KeyId` numeric constants.
 * This provides a layer of abstraction over the physical keys, independent of keyboard layout.
 * For example, `KeyA` will always refer to the physical key that is 'A' on a US-QWERTY layout,
 * regardless of whether the user has an AZERTY or Dvorak layout active.
 */
export const keyMap = {
    'Backspace': KeyBackspace,
    'Tab': KeyTab,
    'Enter': KeyEnter,
    'ShiftLeft': KeyShift,
    'ShiftRight': KeyShift,
    'ControlLeft': KeyCtrl,
    'ControlRight': KeyCtrl,
    'AltLeft': KeyAlt,
    'AltRight': KeyAlt,
    'Pause': KeyPauseBreak,
    'CapsLock': KeyCapsLock,
    'Escape': KeyEscape,
    'Space': KeySpace,
    'PageUp': KeyPageUp,
    'PageDown': KeyPageDown,
    'End': KeyEnd,
    'Home': KeyHome,
    'ArrowLeft': KeyArrowLeft,
    'ArrowUp': KeyArrowUp,
    'ArrowRight': KeyArrowRight,
    'ArrowDown': KeyArrowDown,
    'Insert': KeyInsert,
    'Delete': KeyDelete,
    'Digit0': Key0,
    'Digit1': Key1,
    'Digit2': Key2,
    'Digit3': Key3,
    'Digit4': Key4,
    'Digit5': Key5,
    'Digit6': Key6,
    'Digit7': Key7,
    'Digit8': Key8,
    'Digit9': Key9,
    'KeyA': KeyA,
    'KeyB': KeyB,
    'KeyC': KeyC,
    'KeyD': KeyD,
    'KeyE': KeyE,
    'KeyF': KeyF,
    'KeyG': KeyG,
    'KeyH': KeyH,
    'KeyI': KeyI,
    'KeyJ': KeyJ,
    'KeyK': KeyK,
    'KeyL': KeyL,
    'KeyM': KeyM,
    'KeyN': KeyN,
    'KeyO': KeyO,
    'KeyP': KeyP,
    'KeyQ': KeyQ,
    'KeyR': KeyR,
    'KeyS': KeyS,
    'KeyT': KeyT,
    'KeyU': KeyU,
    'KeyV': KeyV,
    'KeyW': KeyW,
    'KeyX': KeyX,
    'KeyY': KeyY,
    'KeyZ': KeyZ,
    'MetaLeft': KeyMeta,
    'MetaRight': KeyMeta,
    'ContextMenu': KeyContextMenu,
    'Numpad0': KeyNumpad0,
    'Numpad1': KeyNumpad1,
    'Numpad2': KeyNumpad2,
    'Numpad3': KeyNumpad3,
    'Numpad4': KeyNumpad4,
    'Numpad5': KeyNumpad5,
    'Numpad6': KeyNumpad6,
    'Numpad7': KeyNumpad7,
    'Numpad8': KeyNumpad8,
    'Numpad9': KeyNumpad9,
    'NumpadMultiply': KeyNumpadMultiply,
    'NumpadAdd': KeyNumpadAdd,
    'NumpadSubtract': KeyNumpadSubtract,
    'NumpadDecimal': KeyNumpadDecimal,
    'NumpadDivide': KeyNumpadDivide,
    'F1': KeyF1,
    'F2': KeyF2,
    'F3': KeyF3,
    'F4': KeyF4,
    'F5': KeyF5,
    'F6': KeyF6,
    'F7': KeyF7,
    'F8': KeyF8,
    'F9': KeyF9,
    'F10': KeyF10,
    'F11': KeyF11,
    'F12': KeyF12,
    'NumLock': KeyNumLock,
    'ScrollLock': KeyScrollLock,
    'Semicolon': KeySemicolon,
    'Equal': KeyEqual,
    'Comma': KeyComma,
    'Minus': KeyDash,
    'Period': KeyPeriod,
    'Slash': KeyForwardSlash,
    'Backquote': KeyGraveAccent,
    'BracketLeft': KeyOpenBracket,
    'Backslash': KeyBackslash,
    'BracketRight': KeyCloseBracket,
    'Quote': KeySingleQuote,
};
/**
 * Maps internal `KeyId` numeric constants to their string names (without the "Key" prefix).
 * Useful for debugging or UI purposes.
 */
export const keyboardKeyMap = {
    [KeyBackspace]: 'Backspace',
    [KeyTab]: 'Tab',
    [KeyEnter]: 'Enter',
    [KeyShift]: 'Shift',
    [KeyCtrl]: 'Ctrl',
    [KeyAlt]: 'Alt',
    [KeyPauseBreak]: 'PauseBreak',
    [KeyCapsLock]: 'CapsLock',
    [KeyEscape]: 'Escape',
    [KeySpace]: 'Space',
    [KeyPageUp]: 'PageUp',
    [KeyPageDown]: 'PageDown',
    [KeyEnd]: 'End',
    [KeyHome]: 'Home',
    [KeyArrowLeft]: 'ArrowLeft',
    [KeyArrowUp]: 'ArrowUp',
    [KeyArrowRight]: 'ArrowRight',
    [KeyArrowDown]: 'ArrowDown',
    [KeyInsert]: 'Insert',
    [KeyDelete]: 'Delete',
    [Key0]: '0',
    [Key1]: '1',
    [Key2]: '2',
    [Key3]: '3',
    [Key4]: '4',
    [Key5]: '5',
    [Key6]: '6',
    [Key7]: '7',
    [Key8]: '8',
    [Key9]: '9',
    [KeyA]: 'A',
    [KeyB]: 'B',
    [KeyC]: 'C',
    [KeyD]: 'D',
    [KeyE]: 'E',
    [KeyF]: 'F',
    [KeyG]: 'G',
    [KeyH]: 'H',
    [KeyI]: 'I',
    [KeyJ]: 'J',
    [KeyK]: 'K',
    [KeyL]: 'L',
    [KeyM]: 'M',
    [KeyN]: 'N',
    [KeyO]: 'O',
    [KeyP]: 'P',
    [KeyQ]: 'Q',
    [KeyR]: 'R',
    [KeyS]: 'S',
    [KeyT]: 'T',
    [KeyU]: 'U',
    [KeyV]: 'V',
    [KeyW]: 'W',
    [KeyX]: 'X',
    [KeyY]: 'Y',
    [KeyZ]: 'Z',
    [KeyMeta]: 'Meta',
    [KeyContextMenu]: 'ContextMenu',
    [KeyNumpad0]: 'Numpad0',
    [KeyNumpad1]: 'Numpad1',
    [KeyNumpad2]: 'Numpad2',
    [KeyNumpad3]: 'Numpad3',
    [KeyNumpad4]: 'Numpad4',
    [KeyNumpad5]: 'Numpad5',
    [KeyNumpad6]: 'Numpad6',
    [KeyNumpad7]: 'Numpad7',
    [KeyNumpad8]: 'Numpad8',
    [KeyNumpad9]: 'Numpad9',
    [KeyNumpadMultiply]: 'NumpadMultiply',
    [KeyNumpadAdd]: 'NumpadAdd',
    [KeyNumpadSubtract]: 'NumpadSubtract',
    [KeyNumpadDecimal]: 'NumpadDecimal',
    [KeyNumpadDivide]: 'NumpadDivide',
    [KeyF1]: 'F1',
    [KeyF2]: 'F2',
    [KeyF3]: 'F3',
    [KeyF4]: 'F4',
    [KeyF5]: 'F5',
    [KeyF6]: 'F6',
    [KeyF7]: 'F7',
    [KeyF8]: 'F8',
    [KeyF9]: 'F9',
    [KeyF10]: 'F10',
    [KeyF11]: 'F11',
    [KeyF12]: 'F12',
    [KeyNumLock]: 'NumLock',
    [KeyScrollLock]: 'ScrollLock',
    [KeySemicolon]: 'Semicolon',
    [KeyEqual]: 'Equal',
    [KeyComma]: 'Comma',
    [KeyDash]: 'Dash',
    [KeyPeriod]: 'Period',
    [KeyForwardSlash]: 'ForwardSlash',
    [KeyGraveAccent]: 'GraveAccent',
    [KeyOpenBracket]: 'OpenBracket',
    [KeyBackslash]: 'Backslash',
    [KeyCloseBracket]: 'CloseBracket',
    [KeySingleQuote]: 'SingleQuote',
};
//# sourceMappingURL=key_map.js.map